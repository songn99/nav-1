{"version":3,"sources":["main.js"],"names":["$siteList","$","console","log","$lastLi","find","x","localStorage","getItem","objects","JSON","parse","hashMap","logo","url","simplify","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACAC,QAAQC,GAAR,CAAYH,SAAZ;AACA,IAAMI,UAAUJ,UAAUK,IAAV,CAAe,SAAf,CAAhB;AACA,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV;AACA,IAAMC,UAAUC,KAAKC,KAAL,CAAWL,CAAX,CAAhB;AACA,IAAMM,UAAUH,WAAW,CACvB,EAAEI,MAAM,GAAR,EAAaC,KAAK,oBAAlB,EADuB,EAEvB,EAAED,MAAM,GAAR,EAAaC,KAAK,mBAAlB,EAFuB,EAGvB,EAAED,MAAM,GAAR,EAAaC,KAAK,qBAAlB,EAHuB,CAA3B;AAKAZ,QAAQC,GAAR,CAAYS,OAAZ;AACA,IAAMG,WAAW,SAAXA,QAAW,CAACD,GAAD,EAAS;AACtB,WAAOA,IAAIE,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,EACFA,OADE,CACM,SADN,EACiB,EADjB,EAEFA,OAFE,CAEM,MAFN,EAEc,EAFd,EAGFA,OAHE,CAGM,MAHN,EAGc,EAHd,CAAP,CADsB,CAIG;AAC5B,CALD;AAMA,IAAMC,SAAS,SAATA,MAAS,GAAM;AACjBjB,cAAUK,IAAV,CAAe,eAAf,EAAgCa,MAAhC;AACAN,YAAQO,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B,YAAMC,MAAMrB,+EAEgBmB,KAAKP,IAAL,CAAU,CAAV,CAFhB,iDAGeE,SAASK,KAAKN,GAAd,CAHf,8NAUJS,YAVI,CAUSnB,OAVT,CAAZ;AAWAkB,YAAIE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AAClBC,mBAAOC,IAAP,CAAYN,KAAKN,GAAjB;AACH,SAFD;AAGAQ,YAAIE,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAA0B,UAACG,CAAD,EAAO;AAC7BA,cAAEC,eAAF,GAD6B,CACT;AACpBhB,oBAAQiB,MAAR,CAAeR,KAAf,EAAsB,CAAtB;AACAJ;AACH,SAJD;AAKH,KApBD;AAqBH,CAvBD;;AAyBAA;;AAEAhB,EAAE,aAAF,EAAiBuB,EAAjB,CAAoB,OAApB,EAA6B,YAAM;AAC/B,QAAIV,MAAMW,OAAOK,MAAP,CAAc,UAAd,CAAV;AACA,QAAIhB,IAAIiB,OAAJ,CAAY,MAAZ,MAAwB,CAA5B,EAA+B;AAC3BjB,cAAM,aAAaA,GAAnB;AACH;AACDF,YAAQoB,IAAR,CAAa;AACTnB,cAAME,SAASD,GAAT,EAAc,CAAd,EAAiBmB,WAAjB,EADG;AAETnB,aAAKA;AAFI,KAAb;AAIAG;AACH,CAVD;AAWAQ,OAAOS,cAAP,GAAwB,YAAM;AAC1B,QAAMC,SAASzB,KAAK0B,SAAL,CAAexB,OAAf,CAAf,CAD0B,CACY;AACtCL,iBAAa8B,OAAb,CAAqB,GAArB,EAA0BF,MAA1B;AACH,CAHD;AAIAlC,EAAEqC,QAAF,EAAYd,EAAZ,CAAe,UAAf,EAA2B,UAACG,CAAD,EAAO;AAAA,QACtBY,GADsB,GACdZ,CADc,CACtBY,GADsB;;AAE9B,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI5B,QAAQ6B,MAA5B,EAAoCD,GAApC,EAAyC;AACrC,YAAI5B,QAAQ4B,CAAR,EAAW3B,IAAX,CAAgB6B,WAAhB,OAAkCH,GAAtC,EAA2C;AACvCd,mBAAOC,IAAP,CAAYd,QAAQ4B,CAAR,EAAW1B,GAAvB;AACH;AACJ;AACJ,CAPD","file":"main.a0beaa59.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconsole.log($siteList)\r\nconst $lastLi = $siteList.find('li.last')\r\nconst x = localStorage.getItem('x')\r\nconst objects = JSON.parse(x)\r\nconst hashMap = objects || [\r\n    { logo: 'G', url: 'https://github.com' },\r\n    { logo: 'B', url: 'https://baidu.com' },\r\n    { logo: 'I', url: 'https://iconfont.cn' }\r\n]\r\nconsole.log(hashMap)\r\nconst simplify = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '') // 删除 / 开头的内容\r\n}\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()\r\n    hashMap.forEach((node, index) => {\r\n        const $li = $(`<li>\r\n            <div class=\"site\">\r\n                <div class=\"logo\">${node.logo[0]}</div>\r\n                <div class=\"url\">${simplify(node.url)}</div>\r\n                <div class=\"close\">\r\n                <svg class=\"icon\">\r\n                <use xlink:href=\"#icon-ai68\"></use>\r\n                </svg>\r\n                </div>\r\n            </div>\r\n        </li>`).insertBefore($lastLi)\r\n        $li.on('click', () => {\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation() // 阻止冒泡\r\n            hashMap.splice(index, 1)\r\n            render()\r\n        })\r\n    })\r\n}\r\n\r\nrender()\r\n\r\n$('.add-button').on('click', () => {\r\n    let url = window.prompt('主人，你要加啥？')\r\n    if (url.indexOf('http') !== 0) {\r\n        url = 'https://' + url\r\n    }\r\n    hashMap.push({\r\n        logo: simplify(url)[0].toUpperCase(),\r\n        url: url\r\n    })\r\n    render()\r\n})\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)//可以把对象变为字符串\r\n    localStorage.setItem('x', string)\r\n}\r\n$(document).on('keypress', (e) => {\r\n    const { key } = e\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n"]}